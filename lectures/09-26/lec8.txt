

let rec map f l =
  match l with
  | [] -> []
  | h::t -> (f h)::(map f t)

map : ('a -> 'b) -> 'a list -> 'b list


Γ |- e : τ list      Γ |- e1 : τ'       Γ, h : τ, t : τ list |- e2 : τ'
----------------------------------------------------------------------------MATCH
           Γ |- match e with | [] -> e1 | h::t -> e2 : τ'


-----------------NIL
Γ |- [] : τ list

Γ |- h : τ   Γ |- t : τ list
-------------------------------CONS
      Γ |- h::t : τ list


                                                                                                                                                                                        f : 'a -> 'b ε {f : 'a -> 'b, l : 'a list, h : 'a, t : 'a list, map : ('a -> 'b) -> 'a list -> 'b list}           h : 'a ε {f : 'a -> 'b, l : 'a list, h : 'a, t : 'a list, map : ('a -> 'b) -> 'a list -> 'b list}                         map : ('a -> 'b) -> 'a list -> 'b list ε {f : 'a -> 'b, l : 'a list, h : 'a, t : 'a list, map : ('a -> 'b) -> 'a list -> 'b list}         f : 'a -> 'b ε  {f : 'a -> 'b, l : 'a list, h : 'a, t : 'a list, map : ('a -> 'b) -> 'a list -> 'b list}            t : 'a list ε {f : 'a -> 'b, l : 'a list, h : 'a, t : 'a list, map : ('a -> 'b) -> 'a list -> 'b list}

                                                                                                                                                                                        {f : 'a -> 'b, l : 'a list, h : 'a, t : 'a list, map : ('a -> 'b) -> 'a list -> 'b list} |- f : 'a -> 'b        {f : 'a -> 'b, l : 'a list, h : 'a, t : 'a list, map : ('a -> 'b) -> 'a list -> 'b list} |- h : 'a                          {f : 'a -> 'b, l : 'a list, h : 'a, t : 'a list, map : ('a -> 'b) -> 'a list -> 'b list} |- map : ('a -> 'b) -> 'a list -> 'b list      {f : 'a -> 'b, l : 'a list, h : 'a, t : 'a list, map : ('a -> 'b) -> 'a list -> 'b list} |- f : 'a -> 'b           {f : 'a -> 'b, l : 'a list, h : 'a, t : 'a list, map : ('a -> 'b) -> 'a list -> 'b list} |- t : 'a list

l : 'a list ε {f : 'a -> 'b, l : 'a list, map : ('a -> 'b) -> 'a list -> 'b list}                                                                                                       {f : 'a -> 'b, l : 'a list, h : 'a, t : 'a list, map : ('a -> 'b) -> 'a list -> 'b list} |- (f h) : 'b                                                                                                                                      {f : 'a -> 'b, l : 'a list, h : 'a, t : 'a list, map : ('a -> 'b) -> 'a list -> 'b list} |- map f t : 'b list

{f : 'a -> 'b, l : 'a list, map : ('a -> 'b) -> 'a list -> 'b list}  |- l : 'a list         {f : 'a -> 'b, l : 'a list, map : ('a -> 'b) -> 'a list -> 'b list} |- [] : 'b list                    {f : 'a -> 'b, l : 'a list, h : 'a, t : 'a list, map : ('a -> 'b) -> 'a list -> 'b list} |- (f h)::(map f t) : 'b list

{f : 'a -> 'b, l : 'a list, map : ('a -> 'b) -> 'a list -> 'b list} |- match l with | [] -> [] | h::t -> (f h)::(map f t) : 'b list