   ┌──3 ⇓ 3
   ├──false ⇓ false
┌──(3, false) ⇓ (3, false)
│     ┌──3 ⇓ 3
│     │     ┌──3 ⇓ 3
│     │     ├──3 ⇓ 3
│     │  ┌──3 + 3 ⇓ 6
│     │  ├──[] ⇓ []
│     ├──3 + 3 :: [] ⇓ 6 :: []
│  ┌──3 :: 3 + 3 :: [] ⇓ 3 :: 6 :: []
│  │  ┌──false ⇓ false
│  │  │  ┌──3 ⇓ 3
│  │  │  │  ┌──6 ⇓ 6
│  │  │  │  ├──[] ⇓ []
│  │  │  ├──6 :: [] ⇓ 6 :: []
│  │  ├──3 :: 6 :: [] ⇓ 3 :: 6 :: []
│  ├──if false then [] else 3 :: 6 :: [] ⇓ 3 :: 6 :: []
├──let l = 3 :: 3 + 3 :: [] in if false then [] else l ⇓ 3 :: 6 :: []
let (x, b) = (3, false) in let l = x :: x + x :: [] in if b then [] else l ⇓ 3 :: 6 :: []
